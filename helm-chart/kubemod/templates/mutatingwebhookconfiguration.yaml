{{- $caInjector := "" }}
{{- range $k, $v := .Values.webhook.annotations }}
{{- if has $k (list "cert-manager.io/inject-ca-from" "cert-manager.io/inject-ca-from-secret" "cert-manager.io/allow-direct-injection") }}
{{- $caInjector = "true" }}
{{- end }}
{{- end }}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "kubemod.fullname" . }}-mutating-webhook-configuration
  labels:
    {{- include "kubemod.labels" . | nindent 4 }}
  {{- with .Values.webhook.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  creationTimestamp: null
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    {{- if ne $caInjector "true" }}
    caBundle: Cg==
    {{- end }}
    service:
      name: {{ include "kubemod.fullname" . }}-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /mutate-api-kubemod-io-v1beta1-modrule
  failurePolicy: Fail
  name: mmodrule.kubemod.io
  rules:
  - apiGroups:
    - api.kubemod.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - modrules
  sideEffects: None
  timeoutSeconds: 5
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    {{- if ne $caInjector "true" }}
    caBundle: Cg==
    {{- end }}
    service:
      name: {{ include "kubemod.fullname" . }}-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /dragnet-webhook
  failurePolicy: {{ .Values.webhook.failurePolicy }}
  matchPolicy: Equivalent
  name: dragnet.kubemod.io
  namespaceSelector:
    {{- toYaml .Values.webhook.namespaceSelector | nindent 4 }}
  reinvocationPolicy: IfNeeded
  rules:
  - apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    {{- toYaml .Values.webhook.resources | nindent 4 }}
    scope: '*'
  sideEffects: None
  timeoutSeconds: 3
